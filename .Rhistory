theme(legend.position="top", legend.direction="horizontal")
library(ggrepel)
ggplot(metrics, aes(x=popDensity, y= TPB, color = factor(type))) + geom_point() +theme_minimal() + stat_smooth(method = "lm", se = FALSE) +
geom_label_repel(aes(label= rownames(metrics)), size=3) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=12)) +
labs(x = expression(paste( "density ", km^{2})), y = expression(paste("rating[![enter image description here][1]][1]")))+
theme(legend.position="top", legend.direction="horizontal")
ggplot(metrics, aes(x=popDensity, y= TPB, color = factor(type))) +
geom_point() +
theme_minimal() +
stat_smooth(method = "lm", se = FALSE) +
geom_label_repel(aes(label= rownames(metrics)), size=3) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=12)) +
labs(x = expression(paste( "density ", km^{2})), y = expression(paste("rating[![enter image description here][1]][1]")))+
theme(legend.position="top")
warnings()
ggplot(metrics, aes(x=popDensity, y= TPB, color = factor(type))) +
geom_point() +
theme_minimal() +
stat_smooth(method = "lm", se = FALSE) +
geom_label_repel(aes(label= rownames(metrics)), size=3) +
theme(axis.title = element_text(color="#666666", face="bold", size=12)) +
labs(x = expression(paste( "density ", km^{2})), y = expression(paste("rating[![enter image description here][1]][1]")))+
theme(legend.position="top", legend.direction="horizontal")
ggplot(metrics, aes(x=popDensity, y= TPB, color = factor(type))) +
geom_point() +
#theme_minimal() +
stat_smooth(method = "lm", se = FALSE) +
geom_label_repel(aes(label= rownames(metrics)), size=3) +
theme(axis.title = element_text(color="#666666", face="bold", size=12)) +
labs(x = expression(paste( "density ", km^{2})), y = expression(paste("rating[![enter image description here][1]][1]")))+
theme(legend.position="top", legend.direction="horizontal")
ggplot(metrics, aes(x=popDensity, y= TPB, color = factor(type))) +
geom_point() +
theme_minimal() +
#stat_smooth(method = "lm", se = FALSE) +
geom_label_repel(aes(label= rownames(metrics)), size=3) +
theme(axis.title = element_text(color="#666666", face="bold", size=12)) +
labs(x = expression(paste( "density ", km^{2})), y = expression(paste("rating[![enter image description here][1]][1]")))+
theme(legend.position="top", legend.direction="horizontal")
ggplot(metrics, aes(x=popDensity, y= TPB, color = factor(type))) +
geom_point() +
theme_minimal() +
stat_smooth(method = "lm", se = FALSE) +
#geom_label_repel(aes(label= rownames(metrics)), size=3) +
theme(axis.title = element_text(color="#666666", face="bold", size=12)) +
labs(x = expression(paste( "density ", km^{2})), y = expression(paste("rating[![enter image description here][1]][1]")))+
theme(legend.position="top", legend.direction="horizontal")
ggplot(metrics, aes(x=popDensity, y= TPB, color = factor(type))) +
geom_point() +
theme_minimal() +
stat_smooth(method = "lm", se = FALSE) +
geom_label_repel(aes(label= rownames(metrics)), size=3) +
theme(axis.title = element_text(color="#666666", face="bold", size=12)) +
labs(x = expression(paste( "density ", km^{2})), y = expression(paste("rating[![enter image description here][1]][1]")))+
theme(legend.position="top", legend.direction="horizontal")
?geom_label_repel
View(metrics)
View(metrics)
ggplot(metrics, aes(x=popDensity, y= TPB, color = factor(type))) +
geom_point() +
theme_minimal() +
stat_smooth(method = "lm", se = FALSE) +
geom_label_repel(aes(label= rownames(metrics)), size=3, show.legend = FALSE) +
theme(axis.title = element_text(color="#666666", face="bold", size=12)) +
labs(x = expression(paste( "density ", km^{2})), y = expression(paste("rating[![enter image description here][1]][1]")))+
theme(legend.position="top", legend.direction="horizontal")
ggplot(metrics, aes(x=popDensity, y= TPB, color = factor(type))) + geom_point() +theme_minimal() + stat_smooth(method = "lm", se = FALSE) +
geom_label_repel(aes(label= rownames(metrics)), size=3, show.legend = FALSE) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=12)) +
labs(x = expression(paste( "density ", km^{2})), y = expression(paste("rating[![enter image description here][1]][1]")))+
theme(legend.position="top", legend.direction="horizontal")
warnings()
install.packages('fst')
??fst
browseVignettes('fst')
library(fst)
nrOfRows <- 1e7
x <- data.frame(
Integers = 1:nrOfRows,  # integer
Logicals = sample(c(TRUE, FALSE, NA), nrOfRows, replace = TRUE),  # logical
Text = factor(sample(state.name, nrOfRows, replace = TRUE)),  # text
Numericals = runif(nrOfRows, 0.0, 100),  # numericals
stringsAsFactors = FALSE)
write.fst(x, "dataset.fst")
install.packages('microbenchmark')
microbenchmark(
# Store it
write.fst(x, "dataset.fst"),
# Retrieve it
y <- read.fst("dataset.fst")
)
library(microbenchmark)
microbenchmark(write.fst(x, "dataset.fst"),read.fst("dataset.fst"))
microbenchmark(write.fst(x, "dataset.fst"),read.fst("dataset.fst"), times = 1)
nrOfRows <- 1e3
x <- data.frame(
Integers = 1:nrOfRows,  # integer
Logicals = sample(c(TRUE, FALSE, NA), nrOfRows, replace = TRUE),  # logical
Text = factor(sample(state.name, nrOfRows, replace = TRUE)),  # text
Numericals = runif(nrOfRows, 0.0, 100),  # numericals
stringsAsFactors = FALSE)
microbenchmark(write.fst(x, "dataset.fst"),read.fst("dataset.fst"), times = 1)
microbenchmark(write.fst(x, "dataset.fst"),read.fst("dataset.fst"), times = 100)
microbenchmark(write.fst(x, "dataset.fst"), y <- read.fst("dataset.fst"), times = 100)
microbenchmark(write.fst(x, "dataset.fst"), y <- read.fst("dataset.fst"), times = 1)
microbenchmark(write.fst(x, "dataset.fst"), y <- read.fst("dataset.fst"), times = 100)
nrOfRows <- 1e6
x <- data.frame(
Integers = 1:nrOfRows,  # integer
Logicals = sample(c(TRUE, FALSE, NA), nrOfRows, replace = TRUE),  # logical
Text = factor(sample(state.name, nrOfRows, replace = TRUE)),  # text
Numericals = runif(nrOfRows, 0.0, 100),  # numericals
stringsAsFactors = FALSE)
microbenchmark(write.fst(x, "dataset.fst"), y <- read.fst("dataset.fst"), times = 10)
nrOfRows <- 1e7
x <- data.frame(
Integers = 1:nrOfRows,  # integer
Logicals = sample(c(TRUE, FALSE, NA), nrOfRows, replace = TRUE),  # logical
Text = factor(sample(state.name, nrOfRows, replace = TRUE)),  # text
Numericals = runif(nrOfRows, 0.0, 100),  # numericals
stringsAsFactors = FALSE)
microbenchmark(write.fst(x, "dataset.fst"), y <- read.fst("dataset.fst"), times = 10)
microbenchmark(write.fst(x, "dataset.fst", compress = 100), y <- read.fst("dataset.fst"), times = 10)
microbenchmark(write.fst(x, "dataset.fst"), y <- read.fst("dataset.fst"), times = 10)
library(tidyverse)
df <- read_csv('GEOSTAT_grid_POP_1K_2011_V2_0_1.csv') %>%
rbind(read_csv('JRC-GHSL_AIT-grid-POP_1K_2011.csv') %>%
mutate(TOT_P_CON_DT='')) %>%
mutate(lat = as.numeric(gsub('.*N([0-9]+)[EW].*', '\\1', GRD_ID))/100,
lng = as.numeric(gsub('.*[EW]([0-9]+)', '\\1', GRD_ID)) * ifelse(gsub('.*([EW]).*', '\\1', GRD_ID) == 'W', -1, 1) / 100)
plot(unique(df$lat), unique(df$lng))
plot(unique(df$lat))
plot(unique(df$lng))
df %>%
#filter(lng > 25, lng < 60) %>%
filter(between(lng, 8, 13))
df %>%
#filter(lng > 25, lng < 60) %>%
filter(between(lng, 8, 13) & between(lat, 54, 58))
df %>%
#filter(lng > 25, lng < 60) %>%
filter(between(lat, 54, 58))
df %>%
#filter(lng > 25, lng < 60) %>%
filter(lat > 54, lat < 58)
df %>%
#filter(lng > 25, lng < 60) %>%
filter(CNTR_CODE == "DK")
df %>%
#filter(lng > 25, lng < 60) %>%
filter(CNTR_CODE == "DK") %>%
group_by(lat=round(lat, 1), lng=round(lng, 1)) %>%
summarize(value = sum(TOT_P, na.rm=TRUE)) %>%
arrange(lng) %>%
mutate(next.value = lead(value)) %>%
ggplot(aes(lng, lat + 5*(value/max(value)), xend=lng+0.1, yend=lat + 5*(next.value/max(value)))) +
geom_segment(size=0.4, alpha=0.8, color='#5A3E37') +
ggthemes::theme_map() +
coord_equal(0.9)
df %>%
#filter(lng > 25, lng < 60) %>%
filter(CNTR_CODE == "DK") %>%
group_by(lat=round(lat, 2), lng=round(lng, 2)) %>%
summarize(value = sum(TOT_P, na.rm=TRUE)) %>%
arrange(lng) %>%
mutate(next.value = lead(value)) %>%
ggplot(aes(lng, lat + 5*(value/max(value)), xend=lng+0.1, yend=lat + 5*(next.value/max(value)))) +
geom_segment(size=0.4, alpha=0.8, color='#5A3E37') +
ggthemes::theme_map() +
coord_equal(0.9)
df %>%
#filter(lng > 25, lng < 60) %>%
filter(CNTR_CODE == "DK") %>%
group_by(lat=round(lat, 1), lng=round(lng, 1)) %>%
summarize(value = sum(TOT_P, na.rm=TRUE)) %>%
arrange(lng) %>%
mutate(next.value = lead(value)) %>%
ggplot(aes(lng, lat + 5*(value/max(value)), xend=lng+0.1, yend=lat + 5*(next.value/max(value)))) +
geom_segment(size=0.4, alpha=0.8, color='#5A3E37') +
ggthemes::theme_map() +
coord_equal(0.9)
install.packages('installr')
library(tidyverse)
install.packages('tidyverse')
library(tidyverse)
install.packages('tidyverse')
library(tidyverse)
install.packages('tidyverse')
library(tidyverse)
library("stats", lib.loc="C:/Program Files/R/R-3.4.0/library")
detach("package:stats", unload=TRUE)
install.packages("tidyverse")
library(tidyverse)
mtcars %>% filter(cyl == 6) %>% ggplot(aes(mpg, disp)) + geom_point()
mtcars %>% ggplot(aes(mpg, disp)) + geom_point()
mtcars %>% ggplot(aes(mpg, disp, color = cyl)) + geom_point()
mtcars %>% ggplot(aes(mpg, disp, color = factor(cyl))) + geom_point()
blas
?blas
?options
getOption(matprod)
getOption("matprod")
matrix(1,1)
matrix(1,1) + 2:3
matrix(1,1) < 2:3
1 < 2:3
f <- function(x) x^2
integrate(f, 0:1, 2)
integrate(f, 1, 2)
integrate(f, -1, 2)
integrate(f, -2, 2)
integrate(f, 0, 10)
f <- function(x) x^2 + 1
integrate(f, 0, 10)
A <- matrix(1:9, 3)
eigen(A)
class(eigen(A))
A <- matrix(runif(9), 3)
eigen(A)
A <- matrix(runif(9), 3)
eigen(A)
install.packages('errors')
library(errors)
x <- seq(0, 100, 10)
errors(x) <- x*0.02
x
df <-
library(tidyverse)
df <- as_tibble(x)
View(df)
View(df)
df
df <- as.data.frame(x)
df
(x <- set_errors(1:10, seq(0.1, 1, 0.1)))
df <- as.data.frame(x)
df
df <- as_tibble(x)
df
df <- as.data.frame(x = set_errors(1:10, 1:10/10))
df
df <- as.data.frame(x = set_errors(seq(0, 100, 10), 1:10/10))
df <- as.data.frame(x = set_errors(seq(0, 100, 10), seq(0, 100, 10)/10))
df
(x <- set_errors(1:10, seq(0.1, 1, 0.1)))
df <- as_tibble(x)
df
df %>% mutate(x^2, sin(x), 3*x)
df %>% mutate(x^2, sin(x), 3*x) %>% print(digits = 2, notation = 'plusm')
df %>% mutate(x^2, sin(x), 3*x) %>% print(digits = 2, notation = 'plus-minu')
df %>% mutate(x^2, sin(x), 3*x) %>% print(digits = 2, notation = 'plus-minus')
print(df, notation = "plus-minus")
print(df[1,1], notation = "plus-minus")
print(x, notation = "plus-minus")
print(x, digits = 2, notation = "plus-minus")
print(x[1], digits = 2, notation = "plus-minus")
print(df, digits = 2, notation = "plus-minus")
print(df %>% as.data.frame(), digits = 2, notation = "plus-minus")
df <- as.data.frame(df)
df
print(df, digits = 2, notation = "plus-minus")
print(df, digits = 5, notation = "plus-minus")
A <- matrix(runif(9), ncol = 3)
A
solve(A)
solve(A) %*% A
t(A)
t(A)%*%A
v1 <- c(-5,-5,-5,-5,1,2,-5,4,3)
forcats::fct_recode(v1)
forcats::fct_recode(as.factor(v1))
forcats::fct_recode(as.factor(v1), w = `-5`)
forcats::fct_recode(as.factor(v1), w = -5)
forcats::fct_recode(as.factor(v1), w = "-5")
forcats::fct_recode(forcats::fct_other(as.factor(v1), keep = "-5", other_level = "b"), w = "-5")
install.packages('rmarkdown')
install.packages('precis')
devtools::install_github("hadley/precis")
library(precis)
mtcars
precis(mtcars)
?precis
mean(mtcars)
mean(mtcars$mpg)
median(mtcars$mpg)
precis(mtcars, histogram = TRUE)
mtcars
precis(mtcars)
precis(mtcars, histogram = TRUE)
precis(mtcars, rescale = TRUE)
precis(mtcars, rescale = TRUE, reorder = TRUE)
library(tidyverse)
df <- tibble(N = 1:10, f1 = 2*N, f2 = 2^N)
df <- tibble(N = 1:10, f1 = 2*N, f2 = 2^N, f3 = N^10)
df
df %>% gather(key = f, -N)
df %>% gather(key = f, value = value, -N)
df %>% gather(key = f, value = value, -N) %>% ggplot(aes(N, value, color = f)) + geom_line()
df <- tibble(N = 1:10, f1 = 2*N, f2 = 2^N, f3 = N^3)
df %>% gather(key = f, value = value, -N) %>% ggplot(aes(N, value, color = f)) + geom_line()
df <- tibble(N = 1:50, f1 = 2*N, f2 = 2^N, f3 = N^3)
df %>% gather(key = f, value = value, -N) %>% ggplot(aes(N, value, color = f)) + geom_line()
df %>% gather(key = f, value = value, -N) %>% ggplot(aes(N, value, color = f)) + geom_line() + coord_cartesian(ylim = c(0, 1e5))
install.packages('bookdown')
library(tidyverse)
df1 <- read_tsv('word    rating
P_1          1
P_2          1
P_3          1
A_1          X')
View(df1)
df1 <- read_tsv('
word    rating
P_1          1
P_2          1
P_3          1
A_1          X')
?read_tsv
df1 <- read_tsv('
word    rating
P_1          1
P_2          1
P_3          1
A_1          X', col_names = TRUE )
View(df1)
df1 <- read_tsv('word    rating
P_1          1
P_2          1
P_3          1
A_1          X', col_names = TRUE )
View(df1)
df1 <- read_tsv('word    rating
P_1 1
P_2 1
P_3 1
A_1 X', col_names = TRUE )
df1 <- read_tsv('word rating
P_1 1
P_2 1
P_3 1
A_1 X', col_names = TRUE )
View(df1)
df1 <- read_tsv('word rating
P_1 1
P_2 1
P_3 1
A_1 X', col_names = TRUE )
df1 <- read_tsv('word rating
P_1 1
P_2 1
P_3 1
A_1 X', col_names = TRUE )
df1 <- read_tsv('word rating
P_1 1
P_2 1
P_3 1
A_1 X', col_names = TRUE )
df1 <- read_tsv('
word rating
P_1 1
P_2 1
P_3 1
A_1 X', col_names = TRUE )
View(df1)
df1 <- read_tsv('word rating
P_1 1
P_2 1
P_3 1
A_1 X', col_names = TRUE )
df1 <- read_tsv('word,rating
P_1,1
P_2,1
P_3,1
A_1,X', col_names = TRUE )
df1 <- read_csv('word,rating
P_1,1
P_2,1
P_3,1
A_1,X', col_names = TRUE )
View(df1)
df2 <- read_csv('word,rating
P_2,2
P_3,2
P_4,2
A_3,Y
A_4,Z', col_names = TRUE)
df3 <- read_csv('word,rating
P_2,3
P_4,3')
View(df3)
df1 <- read_csv('word,rating
P_1,1
P_2,1
P_3,1
A_1,X')
df2 <- read_csv('word,rating
P_2,2
P_3,2
P_4,2
A_3,Y
A_4,Z')
df3 <- read_csv('word,rating
P_2,3
P_4,3')
merged <- dplyr::left_join(df1, df2)
merged <- dplyr::left_join(df1, df2) %>% left_join(df3)
?read_csv
P_4,3', col_types = c(word = col_character(), rating = col_character())
df3 <-
read_csv('word,rating
P_2,3
P_4,3', col_types = c(word = col_character(), rating = col_character())
merged <- left_join(df1, df2) %>% left_join(df3)
df3 <-
read_csv('word,rating
P_2,3
P_4,3', col_types = c(word = col_character(), rating = col_character()))
df3 <- read_csv('word,rating
P_2,3
P_4,3', col_types = c(word = col_character(), rating = col_character()))
df3 <- read_csv('word,rating
P_2,3
P_4,3', col_types = cols(word = col_character(), rating = col_character()))
merged <- left_join(df1, df2) %>% left_join(df3)
View(merged)
merged <- full_join(df1, df2) %>% full_join(df3)
View(merged)
?readr::read_fwf
t = c(0.23,1.29,2.35,3.41,4.47,5.53,6.59,7.65,8.71,9.77)
y = c(4.64,3.38,3.01,2.55,2.29,1.67,1.59,1.69,1.38,1.46)
plot(t,y)
arrows(t, y-e, t, y+e, length=0.05, angle=90, code=3)
e = c(0.42,0.37,0.34,0.31,0.29,0.27,0.26,0.25,0.24,0.24)
plot(t,y)
arrows(t, y-e, t, y+e, length=0.05, angle=90, code=3)
plot(t,y, ylim=range(c(y-c, y+c)))
plot(t,y, ylim=range(c(y-c, y+c))
arrows(t, y-e, t, y+e, length=0.05, angle=90, code=3)
plot(t,y, ylim=range(c(y-c, y+c))))
plot(t,y, ylim=range(c(y-c, y+c)))
plot(t,y, ylim=range(c(y-e, y+e)))
arrows(t, y-e, t, y+e, length=0.05, angle=90, code=3)
setwd("C:/Users/emilbp/OneDrive/Datascience/os_test")
library(tidyverse)
library(tidyverse)
data <- read_csv('data/CV4 2mM benzophenone.txt', col_names = c('Pot', 'Cur'), skip = 30)
data %>% ggplot(aes(Pot, Cur)) +
geom_path()
data %>% ggplot(aes(Pot, Cur)) +
geom_path()
devtools::install_github("hrbrmstr/hrbrthemes")
devtools::install_github("hrbrmstr/hrbrthemes")
install.packages('htmltools')
install.packages("htmltools")
devtools::install_github("hrbrmstr/hrbrthemes")
install.packages('extrafont', 'extrafontdb')
devtools::install_github("hrbrmstr/hrbrthemes")
library(hrbrthemes)
data %>% ggplot(aes(Pot, Cur)) +
geom_path() +
theme_ipsum_rc()
library(tidyverse)
data <- read_csv('data/CV4 2mM benzophenone.txt', col_names = c('Pot', 'Cur'), skip = 30)
data %>% ggplot(aes(Pot, Cur)) +
geom_path() +
theme_ipsum_rc()
data %>% ggplot(aes(Pot, Cur)) +
geom_path() +
theme_ipsum_rc() +
scale_color_ipsum()
data %>% ggplot(aes(Pot, Cur, color = pot)) +
geom_path() +
theme_ipsum_rc() +
scale_color_ipsum()
data %>% ggplot(aes(Pot, Cur, color = Pot)) +
geom_path() +
theme_ipsum_rc() +
scale_color_ipsum()
data %>% ggplot(aes(Pot, Cur, color = Pot)) +
geom_path() +
theme_ipsum_rc()
data %>% ggplot(aes(Pot, Cur)) +
geom_path() +
theme_ipsum_rc()
?extrafont
extrafont::font_import()
extrafont::loadfonts()
data %>% ggplot(aes(Pot, Cur)) +
geom_path() +
theme_ipsum_rc()
data %>% ggplot(aes(Pot, Cur)) +
geom_path() +
labs(x = "Potential (V vs. Ag/AgI)", y = "Current (A)", title = "Electrochemical reduction of benzophenone",
subtitle = "Cyclic voltammetry, 0.1 V/s", caption = "Obtained 20170510") +
theme_ipsum_rc()
loadfonts(device="win")
extrafont::loadfonts(device="win")
data %>% ggplot(aes(Pot, Cur)) +
geom_path() +
labs(x = "Potential (V vs. Ag/AgI)", y = "Current (A)", title = "Electrochemical reduction of benzophenone",
subtitle = "Cyclic voltammetry, 0.1 V/s", caption = "Obtained 20170510") +
theme_ipsum_rc()
library(tidyverse)
library(tidyverse)
library(hrbrthemes)
data <- read_csv('data/CV4 2mM benzophenone.txt', col_names = c('Pot', 'Cur'), skip = 30)
data %>% ggplot(aes(Pot, Cur)) +
geom_path() +
labs(x = "Potential (V vs. Ag/AgI)", y = "Current (A)", title = "Electrochemical reduction of benzophenone",
subtitle = "Cyclic voltammetry, 0.1 V/s", caption = "Obtained 20170510") +
theme_ipsum_rc()
